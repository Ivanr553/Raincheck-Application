<!DOCTYPE html>
<html>
  <head>
    <title>Raincheck Application</title>
    <link rel='stylesheet' href='public/layouts/scss/main.scss' />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
    <style>
    * {
      font-family: Times;
    }
      table, th, td {
        border: solid 1px black;
        padding: 0.3vh;
        font-size: 2vh;
        text-align: center;
        height: 8vh;
      }
      table {
        margin-left: 2vh;
      }
      textarea {
        height: 90%;
        resize: none;
      }
      body {
        padding: 3vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      input {
        margin: 0.5vh;
        margin-left: 0;
        width: 176px;
      }
      input[type=number]::-webkit-inner-spin-button,
      input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
      }
      .sku {
        margin-right: 0.8vh;
      }
      .enter-container {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: left;
      }
      #enter {
        margin: auto;
        margin-left: 0;
        margin-right: 0;
      }
      #addItem {
        margin-right: auto;
        margin-top: 0.2vh;
      }
      .notes {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        border-top: none;
        border-right: none;
        border-left: none;
      }
    </style>
  </head>
  <body>
    {{{body}}}
  </body>
  <script style="text/javascript">


function addInputs(){
  let i = 0;
  (function add() {
    let sku = document.createElement("input");
    let item = document.createElement("input");
    let br = document.createElement("br");
    let enter = document.getElementById("enter");
    let notes = document.getElementById("notes");

    sku.setAttribute("type", "number");
    sku.setAttribute("name", "skus["+(i+1)+"]");
    sku.setAttribute("placeholder", "sku");
    sku.className += "sku";
    enter.insertBefore(sku, notes);

    item.setAttribute("type", "string");
    item.setAttribute("name", "items["+(i+1)+"]");
    item.setAttribute("placeholder", "item");
    enter.insertBefore(item, notes)

    enter.insertBefore(br, notes);

    i++;
  })()
}


//Adding the delete buttons into the table
  (function addDelete() {
    let childElements = document.getElementById("main-table").children[0].children;

    function Del() {
      let delElement = document.createElement("button");
      delElement.setAttribute("onClick", "deleteElement(this)");
      delElement.innerHTML = "Delete";
      return delElement;
    }

    for(let i = 0; i < childElements.length; i++) {
      if(i != 0) {
        if(childElements[i].children[0].innerHTML != "") {
          let cell = childElements[i].insertCell();
          cell.setAttribute("class", "deleteCell");
          childElements[i].children[5].setAttribute("onclick", "turnTextArea(this)");
        }
      }
    }
    let cells = document.getElementsByClassName("deleteCell");
    for(let i = 0; i < cells.length; i++) {
      window["deleteCell" + i] = new Del();
      cells[i].append(window["deleteCell" + i])
    }

  })()

  //delete functionality
    function deleteElement(el) {
      let postPhone = el.parentElement.parentElement.children[2].innerHTML.toString()
      let order = {phone: postPhone}

      $.ajax({
        type: "POST",
        url: "/delete",
        data: order,
        success: function() {
          window.location.reload(true);
        },
        error: function() {
          alert("eror");
        }
      })

    }

    //onClick textArea
    function turnTextArea(el) {
      if(el.children.length === 0){
      let textArea = document.createElement("textarea");
      let data = el.innerHTML;
      let button = document.createElement("button");

      button.setAttribute("onClick", "commitNotes(this)")
      button.innerHTML = "Commit";
      button.style.margin = "auto";

      el.innerHTML = "";
      el.className = "notes"

      textArea.innerHTML = data;

      el.append(textArea);
      el.append(button);
    }
    }

    //textArea submit feature
    function commitNotes(el) {
      let postNotes = el.parentElement.children[0].value;
      let postPhone = el.parentElement.parentElement.children[2].innerHTML;
      let update = {
        phone: postPhone,
        notes: postNotes
      };

      $.ajax({
        type: "POST",
        url: "/update",
        data: update,
        success: () => {
          window.location.reload(true);
        },
        error: () => {
          alert("error");
        }
      })
    }

  </script>
</html>
